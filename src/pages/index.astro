---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import GoogleAnalytics from "../components/GoogleAnalytics.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import { getCollection } from "astro:content";
const projects = (await getCollection("projects")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const tags = await getCollection("tags");
const tagsBySlug = tags.reduce(
  (acc, tag) => {
    acc[tag.slug] = tag;
    return acc;
  },
  {} as Record<string, (typeof tags)[0]>
);

const projectsByYear = projects.reduce(
  (acc, project) => {
    const year = project.data.pubDate.getFullYear();
    if (!acc[year]) {
      acc[year] = [];
    }
    acc[year]!.push(project);
    return acc;
  },
  {} as Record<number, (typeof projects)[0][]>
);
---

<!doctype html>
<html lang="en">
  <head>
    <GoogleAnalytics />
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body class="bg-background text-foreground">
    <Header title={SITE_TITLE} />
    <main class="grid p-4 md:p-8 content-start max-w-[1600px] mx-auto">
      <p
        class="font-serif text-[clamp(1.75rem,3.5vw,5rem)] tracking-tight max-w-2xl md:max-w-[1400px] leading-tight balance"
      >
        Tone Row is a space for web development and tools-for-thought research.
        We build tools to help people think and create.
      </p>

      <div class="grid gap-6">
        <h2 class="text-lg mt-9 mb-5">Projects / Software / Research</h2>
        <div class="grid gap-16">
          {
            Object.keys(projectsByYear)
              .sort()
              .reverse()
              .map((year) => (
                <div>
                  <marquee scrollamount="2" class="mb-8">
                    <h2 class="text-4xl font-serif opacity-15 inline-block">
                      {Array.from({ length: 20 }, () => year).join(" ")}
                    </h2>
                  </marquee>

                  <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8 md:gap-y-16">
                    {projectsByYear[
                      Number(year) as keyof typeof projectsByYear
                    ]?.map((project) => (
                      <a
                        href={project.data.url ?? "#"}
                        target={project.data.url ? "_blank" : "_self"}
                        class="text-neutral-700"
                      >
                        {project.data.tags ? (
                          <div class="flex flex-wrap gap-1">
                            {project.data.tags.map((tag) => (
                              <span
                                class="text-xs  p-1 px-1.5 rounded-full"
                                data-tag={tag.slug}
                              >
                                <span class="mix-blend-difference text-orange-500">
                                  {tagsBySlug[tag.slug]?.data.name}
                                </span>
                              </span>
                            ))}
                          </div>
                        ) : null}
                        <h3 class="text-2xl font-bold mt-1 mb-1">
                          {project.data.title}
                        </h3>
                        <p class="tracking-wide text-neutral-600 text-lg leading-tight text-wrap-balance">
                          {project.data.description}
                        </p>
                      </a>
                    ))}
                  </div>
                </div>
              ))
          }
        </div>
      </div>
    </main>
    <Footer />
  </body>
</html>
